<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>

<%@ page import="com.jspproject.bodyinfo.BodyInfoDTO" %>
<%@ page import="com.jspproject.mypage.MemberDTO" %>

<%	//ÏûÑÏãúÎ°ú memberid ÎÑ£Ïñ¥Îë†
	MemberDTO member = new MemberDTO();
	member.setMemberid("user1");
	BodyInfoDTO bmi = new BodyInfoDTO();
	bmi.setMemberid("user1");
	
%>

<!DOCTYPE html>
<html lang="UTF-8">
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ÌöåÏõêÏ†ïÎ≥¥ ÏàòÏ†ï</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body class="bg-black text-white">
    <div class="flex">
    	<!-- ÏÇ¨Ïù¥ÎìúÎ∞î -->
        <aside class="w-1/4">
            <%@ include file="/user/usernavbar/usernavbar.jsp" %>
        </aside>

        <!-- Î©îÏù∏ ÏΩòÌÖêÏ∏† -->
        <main class="flex-1 p-8">
        	<form action="${pageContext.request.contextPath}/updateMember" method="post">
            <h1 class="text-2xl font-bold mb-6">ÌöåÏõêÏ†ïÎ≥¥ÏàòÏ†ï</h1>
            
            <!-- hidden inputÏúºÎ°ú ÌöåÏõê ID Ï†ÑÎã¨ -->
    		<input type="hidden" name="memberid" value="${member.memberid}" />	<!-- Ï∂îÌõÑ Î°úÍ∑∏Ïù∏ Í∏∞Îä• Ïó∞Îèô Ïãú member ÏßÄÏö∞Í∏∞ -->
    		
            <!-- ÌîÑÎ°úÌïÑ ÏÑπÏÖò -->
            <div class="flex flex-col items-center mb-10">
                <div class="w-24 h-24 bg-gray-600 rounded-full flex items-center justify-center">
                    <span class="text-3xl">üë§</span>
                </div>
                <input type="text" name="name" placeholder="ÎãâÎÑ§ÏûÑ ÏûÖÎ†•" value="${name}" required class="text-center bg-black text-white mt-2 text-lg border-b border-gray-500 focus:outline-none">
            </div>

            <!-- Ïù¥Î©îÏùº -->
            <div class="mb-4">
                <label class="block text-sm font-semibold mb-1">Ïù¥Î©îÏùº</label>
                <div class="flex items-center">
                    <input type="email" name="email" placeholder="Ïòà: example@gmail.com" value="${email}" required
               			class="flex-1 bg-black text-white border-b border-gray-500 focus:outline-none">
                    <button class="ml-2 text-sm text-gray-400">‚úèÔ∏è</button>
                </div>
            </div>

            <!-- Ï†ÑÌôîÎ≤àÌò∏ -->
            <div class="mb-4">
                <label class="block text-sm font-semibold mb-1">Ï†ÑÌôîÎ≤àÌò∏</label>
                <div class="flex items-center">
                    <input type="text" name="tel" placeholder="(-Ï†úÏô∏) 010****1234" value="${tel}" required class="flex-1 bg-black text-white border-b border-gray-500 focus:outline-none">
                    <button class="ml-2 text-sm text-gray-400">‚úèÔ∏è</button>
                </div>
            </div>

            <!-- Ï£ºÏÜå -->
            <div class="mb-6">
                <label class="block text-sm font-semibold mb-1">Ï£ºÏÜå</label>
                <div class="flex items-center">
                    <input type="text" name="addr" placeholder="**Ïãú **Íµ¨ **Îèô 123-12" value="${addr}" required class="flex-1 bg-black text-white border-b border-gray-500 focus:outline-none resize-none">
                    <button class="ml-2 text-sm text-gray-400">‚úèÔ∏è</button>
                </div>
            </div>
            
            <!-- ÎπÑÎ≤à -->
            <div class="mb-6">
                <label class="block text-sm font-semibold mb-1">ÎπÑÎ∞ÄÎ≤àÌò∏</label>
                <div class="flex items-center">
                    <input type="text" name="password" placeholder="ÎπÑÎ∞ÄÎ≤àÌò∏ Î≥ÄÍ≤Ω" value="${password}" required class="flex-1 bg-black text-white border-b border-gray-500 focus:outline-none resize-none">
                    <button class="ml-2 text-sm text-gray-400">‚úèÔ∏è</button>
                </div>
            </div>
			<!-- Î≤ÑÌäº -->
            <div class="flex flex-row-reverse">
                <button type="button" name="bodyInfoButton" id="bodyInfoButton" class="px-4 py-2 bg-gray-800 border border-white rounded-md justify-end items-right">Ïã†Ï≤¥Ï†ïÎ≥¥ÏàòÏ†ï</button>
            	<!-- ÌôïÏù∏Î≤ÑÌäº -->
                <button type="submit" class="px-4 py-2 bg-gray-800 border border-white rounded-md justify-end items-right">ÏàòÏ†ïÏôÑÎ£å</button>
            </div>
            </form>
            
            
            <form action="${pageContext.request.contextPath}/saveBodyInfo" method="post">
            <div id="bodyInfoSection">
            
            <!-- hidden inputÏúºÎ°ú ÌöåÏõê ID Ï†ÑÎã¨ -->
    		<input type="hidden" name="memberid" value="<%= bmi.getMemberid() %>" />	<!-- Ï∂îÌõÑ Î°úÍ∑∏Ïù∏ Í∏∞Îä• Ïó∞Îèô Ïãú bmi ÏßÄÏö∞Í∏∞ -->
    		
            <!-- ÌÇ§ -->
            <div class="mb-4">
                <label class="block text-sm font-semibold mb-1">ÌÇ§</label>
                <div class="flex items-center">
                    <input type="text"  id="height" name="height" placeholder="ÌÇ§ cm" value="${height}" required
               			class="flex-1 bg-black text-white border-b border-gray-500 focus:outline-none">
                    <button class="ml-2 text-sm text-gray-400">‚úèÔ∏è</button>
                </div>
            </div>

            <!-- Î™∏Î¨¥Í≤å -->
            <div class="mb-4">
                <label class="block text-sm font-semibold mb-1">Î™∏Î¨¥Í≤å</label>
                <div class="flex items-center">
                    <input type="text" id="weight" name="weight" placeholder="Î™∏Î¨¥Í≤å kg" value="${weight}" required class="flex-1 bg-black text-white border-b border-gray-500 focus:outline-none">
                    <button class="ml-2 text-sm text-gray-400">‚úèÔ∏è</button>
                </div>
            </div>

            <!-- ÏÑ±Î≥Ñ -->
            <div class="mb-6">
                <label class="block text-sm font-semibold mb-1">ÏÑ±Î≥Ñ</label>
                <div class="flex items-center">
                    <div class="flex-2 w-full">
	                    <select id="gender" name="gender" class="bg-black text-white border-b border-gray-500 w-full focus:outline-none focus:border-white">
	                        <option value="M">ÎÇ®ÏÑ±</option>
	                        <option value="F">Ïó¨ÏÑ±</option>
	                        <option value="NoN">ÏÑ†ÌÉùÏïàÌï®</option>
	                    </select>
               	 	</div>
                    <button class="ml-2 text-sm text-gray-400">‚úèÔ∏è</button>
                </div>
            </div>
            
            <!-- ÎÇòÏù¥ -->
            <div class="mb-6">
                <label class="block text-sm font-semibold mb-1">ÎÇòÏù¥</label>
                <div class="flex items-center">
                    <input type="text" id="age" name="age" placeholder="(Îßå)" value="${age}" required class="flex-1 bg-black text-white border-b border-gray-500 focus:outline-none resize-none">
                    <button class="ml-2 text-sm text-gray-400">‚úèÔ∏è</button>
                </div>
            </div>
            <div class="flex justify-end">
            <!-- Î≤ÑÌäº -->
	            <div class="flex justify-end space-x-4">
	                <button type="button" id="calculateButton" class="px-4 py-2 bg-gray-800 border border-white rounded-md">ÏûÖÎ†•</button>
	            </div>
		    </div>
		    </div>
            
            <div id="inbodyInsert" class="flex mt-8 text-center flex items-center justify-center hidden">
            <div id="chartContainer" style="position: relative; width: 250px; height: 500px;">
			    <!-- Î∞∞Í≤Ω Ïù¥ÎØ∏ÏßÄ -->
			    <img src="<%=request.getContextPath() %>/user/mypage/img/body.png" alt="Human Background" style="width: 80%; height: 80%; position: absolute; top: 0; left: 0; z-index: 0;">
			    <!-- Ï∞®Ìä∏ Ï∫îÎ≤ÑÏä§ -->
			    <canvas id="radarChart" style="position: absolute; width: 100%; height: 100%; top: -70px; left: -35px; z-index: 1;"></canvas>
			</div>
            <div id="radarChartSection" class="mt-6 hidden">
    			<canvas id="radarChart" style="max-width: 600px; margin: auto;"></canvas>
			</div>
            <div>
            	<div class="flex items-center">
                <label for="weight" class="flex-1 text-right pr-4">Î™∏ÌÜµ</label>
                <input type="text" id="body" name="body" placeholder="Í≥®Í≤©Í∑ºÎüâÏùÑ ÏûÖÎ†•(kg)" value="${body}" class="flex-2 bg-black text-white border-b border-gray-500 focus:outline-none focus:border-white">
            	</div>
            	
            	<div class="flex items-center">
                <label for="weight" class="flex-1 text-right pr-4">ÏôºÌåî</label>
                <input type="text" id="leftArm" name="leftArm" placeholder="Í≥®Í≤©Í∑ºÎüâÏùÑ ÏûÖÎ†•(kg)" value="${leftArm}" class="flex-2 bg-black text-white border-b border-gray-500 focus:outline-none focus:border-white">
            	</div>
            	
            	<div class="flex items-center">
                <label for="weight" class="flex-1 text-right pr-4">Ïò§Î•∏Ìåî</label>
                <input type="text" id="rightArm" name="rightArm" placeholder="Í≥®Í≤©Í∑ºÎüâÏùÑ ÏûÖÎ†•(kg)" value="${rightArm}" class="flex-2 bg-black text-white border-b border-gray-500 focus:outline-none focus:border-white">
            	</div>
            	
            	<div class="flex items-center">
                <label for="weight" class="flex-1 text-right pr-4">ÏôºÎã§Î¶¨</label>
                <input type="text" id="leftLeg" name="leftLeg" placeholder="Í≥®Í≤©Í∑ºÎüâÏùÑ ÏûÖÎ†•(kg)" value="${leftLeg}" class="flex-2 bg-black text-white border-b border-gray-500 focus:outline-none focus:border-white">
            	</div>
            	
            	<div class="flex items-center">
                <label for="weight" class="flex-1 text-right pr-4">Ïò§Î•∏Îã§Î¶¨</label>
                <input type="text" id="rightLeg" name="rightLeg" placeholder="Í≥®Í≤©Í∑ºÎüâÏùÑ ÏûÖÎ†•(kg)" value="${rightLeg}" class="flex-2 bg-black text-white border-b border-gray-500 focus:outline-none focus:border-white">
            	</div>
            	<button type="button" id="chart" class="mt-4 px-4 py-2 bg-gray-800 border border-white rounded-md">ÏûÖÎ†•</button>
            	<img src="" alt="Ìã∞Ïñ¥" class="mx-auto hidden">
            </div>
            
            
            
            </div>
            <div id="bmiResultSection" class="mt-6 flex-1 p-8 hidden">
            	<input type="hidden" id="bmiHidden" name="bmi" value="bmiValue" />
                <p id="bmiResult" class="text-lg font-bold mb-4">BMIÏßÄÏàò: <span id="bmiValue"></span></p>
                <div style="width: 100%; max-width: 600px; height: 100px; margin: auto;">
                    <canvas id="bmiChart"></canvas>
                </div>
                <button type="submit" id="saveButton" class="mt-4 px-4 py-2 bg-gray-800 border border-white rounded-md" disabled>Ï†ÄÏû•</button>
        	</div>
            </form>
        </main>
    </div>
    
    
    
    <script>

			    let bmiChart;
			    
			    document.getElementById('bodyInfoButton').addEventListener('click', function () {
		            const bodyInfoSection = document.getElementById('bodyInfoSection');
		            bodyInfoSection.classList.toggle('hidden');
		            const selectedGender = document.getElementById('gender').value;
		            let gender;
		            if (selectedGender === 'ÎÇ®ÏÑ±') {
		                gender = 'M';
		            } else if (selectedGender === 'Ïó¨ÏÑ±') {
		                gender = 'F';
		            } else {
		                gender = 'NoN';
		            }
		        });
			    
			    
		        // 'ÏûÖÎ†•' Î≤ÑÌäº ÌÅ¥Î¶≠ Ïù¥Î≤§Ìä∏
		        document.getElementById('calculateButton').addEventListener('click', function () {
		        	/*const memberidElement = document.getElementById('memberid');
		        	if (!memberidElement) {
		        	    console.error('memberid ÏöîÏÜåÎ•º Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§.');
		        	    return; // Ïò§Î•ò Î∞úÏÉù Ïãú Ìï®Ïàò Ï¢ÖÎ£å
		        	}*/
		        	//const memberid = memberidElement.value;
		            const height = parseFloat(document.getElementById('height').value);
		            const weight = parseFloat(document.getElementById('weight').value);
		            
	
		            if (height && weight) {
		                const bmi = (weight / ((height / 100) ** 2)).toFixed(2); // BMI Í≥ÑÏÇ∞
		                document.getElementById('bmiValue').textContent = bmi;
		                document.getElementById('bmiHidden').value = bmi;
		                document.getElementById('saveButton').disabled = false;
	
		                // Ï∞®Ìä∏ ÏÉùÏÑ± ÎòêÎäî ÏóÖÎç∞Ïù¥Ìä∏
		                const ctx = document.getElementById('bmiChart').getContext('2d');
		                if (bmiChart) {
		                    bmiChart.data.datasets[0].data = [bmi];
		                    bmiChart.update();
		                } else {
		                    bmiChart = new Chart(ctx, {
		                        type: 'bar',
		                        data: {
		                            labels: ['BMI'],
		                            datasets: [
		                            {
		                                label: 'Ï†ÄÏ≤¥Ï§ë', // 0 ~ 18.5
		                                data: [bmi <= 18.5 ? bmi : 0], // Ìï¥Îãπ Íµ¨Í∞ÑÏóêÎßå Îç∞Ïù¥ÌÑ∞ ÌëúÏãú
		                                backgroundColor: 'rgba(54, 162, 235, 0.6)', // ÌååÎûÄÏÉâ
		                            },
		                            {
		                                label: 'Ï†ïÏÉÅ', // 18.5 ~ 24.9
		                                data: [bmi > 18.5 && bmi <= 24.9 ? bmi : 0], // Ìï¥Îãπ Íµ¨Í∞ÑÏóêÎßå Îç∞Ïù¥ÌÑ∞ ÌëúÏãú
		                                backgroundColor: 'rgba(75, 192, 192, 0.6)', // Ï¥àÎ°ùÏÉâ
		                            },
		                            {
		                                label: 'Í≥ºÏ≤¥Ï§ë', // 25 ~ 29.9
		                                data: [bmi > 24.9 && bmi <= 29.9 ? bmi : 0], // Ìï¥Îãπ Íµ¨Í∞ÑÏóêÎßå Îç∞Ïù¥ÌÑ∞ ÌëúÏãú
		                                backgroundColor: 'rgba(255, 159, 64, 0.6)', // Ï£ºÌô©ÏÉâ
		                            },
		                            {
		                                label: 'ÎπÑÎßå', // 30 Ïù¥ÏÉÅ
		                                data: [bmi > 29.9 ? bmi : 0], // Ìï¥Îãπ Íµ¨Í∞ÑÏóêÎßå Îç∞Ïù¥ÌÑ∞ ÌëúÏãú
		                                backgroundColor: 'rgba(255, 99, 132, 0.6)', // Îπ®Í∞ÑÏÉâ
		                            },]
		                        },
		                        options: {
		                            responsive: true,
		                            maintainAspectRatio: false,
		                            indexAxis: 'y',
		                            scales: {
		                                x: {
		                                    beginAtZero: true
		                                }
		                            }
		                        }
		                    });
		                }
		                
					
		             	// Ï†ÄÏû• Î≤ÑÌäº ÌôúÏÑ±Ìôî Î∞è Í≤∞Í≥º ÏÑπÏÖò ÌëúÏãú
		             	const inbodySection = document.getElementById('inbodyInsert');
		             	if (inbodySection.classList.contains('hidden')) {
		             		inbodySection.classList.remove('hidden');
		             	}
		             	
		                const bmiSection = document.getElementById('bmiResultSection');
		                if (bmiSection.classList.contains('hidden')) {
		                    bmiSection.classList.remove('hidden');
		                }
		                document.getElementById('saveButton').disabled = false;
		            } else {
		                alert('ÌÇ§ÏôÄ Î™∏Î¨¥Í≤åÎ•º ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.');
		            }
		        });
		        
		     ////////////
		     // Radar Chart Í∞ùÏ≤¥Î•º Ï†ÄÏû•Ìï† Î≥ÄÏàò
		        let radarChart;

		        // 'ÏûÖÎ†•' Î≤ÑÌäº ÌÅ¥Î¶≠ Ïù¥Î≤§Ìä∏
		        document.getElementById('chart').addEventListener('click', function () {
		            const body = parseFloat(document.getElementById('body').value);
		            const leftArm = parseFloat(document.getElementById('leftArm').value);
		            const rightArm = parseFloat(document.getElementById('rightArm').value);
		            const leftLeg = parseFloat(document.getElementById('leftLeg').value);
		            const rightLeg = parseFloat(document.getElementById('rightLeg').value);

		            // ÏûÖÎ†•Í∞í Ïú†Ìö®ÏÑ± Í≤ÄÏÇ¨
		            if (isNaN(body) || isNaN(leftArm) || isNaN(rightArm) || isNaN(leftLeg) || isNaN(rightLeg)) {
		                alert("Î™®Îì† Í∞íÏùÑ Ïò¨Î∞îÎ•¥Í≤å ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.");
		                return;
		            }
		            
		            
		         // Ï†êÏàò Í≥ÑÏÇ∞
		            const totalScore = body + leftArm + rightArm + leftLeg + rightLeg;
		            console.log('Total Score:', totalScore);

		            // Ìã∞Ïñ¥ Í≥ÑÏÇ∞ Ìï®Ïàò
		            const calculateTier = (score) => {
		                if (score <= 89) return 'bronze';
		                if (score <= 109) return 'silver';
		                if (score <= 139) return 'gold';
		                if (score <= 179) return 'platinum';
		                if (score <= 219) return 'diamond';
		                if (score <= 239) return 'master';
		                return 'grandmaster';
		            };
		            
		            const tierName = calculateTier(totalScore);
		            
		            const tierImage = document.querySelector('img[alt="Ìã∞Ïñ¥"]');
		            if (tierImage) {
		            	tierImage.src = '/user/mypage/img/tier/' + tierName + '.png';
		            	tierImage.classList.remove('hidden');
		            	console.log('Tier Image Path:', tierImage.src);
		            }
		            

		            // Îç∞Ïù¥ÌÑ∞ Î∞∞Ïó¥ ÏÉùÏÑ±
		            const radarData = [body, leftArm, rightArm, leftLeg, rightLeg];

		            // Radar Chart ÏÉùÏÑ±
		            const ctx = document.getElementById('radarChart').getContext('2d');
		            if (radarChart) {
		                // Ïù¥ÎØ∏ Ï∞®Ìä∏Í∞Ä ÏûàÏúºÎ©¥ Îç∞Ïù¥ÌÑ∞ ÏóÖÎç∞Ïù¥Ìä∏
		                radarChart.data.datasets[0].data = radarData;
		                radarChart.update();
		            } else {
		                // ÏÉà Ï∞®Ìä∏ ÏÉùÏÑ±
		                radarChart = new Chart(ctx, {
		                    type: 'radar',
		                    data: {
		                        labels: ['Î™∏ÌÜµ', 'ÏôºÌåî', 'Ïò§Î•∏Ìåî', 'ÏôºÎã§Î¶¨', 'Ïò§Î•∏Îã§Î¶¨'],
		                        datasets: [
		                            {
		                                label: 'Ïã†Ï≤¥ Îç∞Ïù¥ÌÑ∞',
		                                data: radarData,
		                                backgroundColor: 'rgba(255, 99, 132, 0.5)',
		                                borderColor: 'rgba(255, 99, 132, 1)',
		                                borderWidth: 2,
		                            }
		                        ],
		                    },
		                    options: {
		                        responsive: true,
		                        maintainAspectRatio: false, // Ï∫îÎ≤ÑÏä§ ÌÅ¨Í∏∞ Ïú†ÏßÄ
		                        scales: {
		                            r: {
		                                beginAtZero: true,
		                                suggestedMin: 0,
		                                suggestedMax: 50,
		                            }
		                        },
		                        plugins: {
		                            legend: {
		                                display: true,
		                                position: 'top',
		                            }
		                        }
		                    }
		                });
		            }
		        });
		        
		        
		        console.log('Tier Image Path:', `/user/mypage/img/tier/${tierName}.png`);

			</script>
</body>
</html>